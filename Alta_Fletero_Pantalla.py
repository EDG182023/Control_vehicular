# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'AltaFletero.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import pyodbc
from PIL import Image
import cv2
import numpy as np
from PyQt5.QtWidgets import QGraphicsScene, QGraphicsView, QApplication
from PyQt5.QtGui import QImage, QPixmap
from PIL import Image
import matplotlib.pyplot as plt


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(444, 561)
        @QtCore.pyqtSlot()
        def ingresar():
            dni = ''
            nombre=self.lineEdit.text()
            apellido=self.lineEdit_2.text()
            imagen=self.photo
            dni_carga(dni, nombre, apellido, imagen)

        Dialog.setStyleSheet("/* Resetear estilos por defecto */\n"
                             "* {\n"
                             "  margin: 0;\n"
                             "  padding: 0;\n"
                             "  border: none;\n"
                             "  outline: none;\n"
                             "  font-family: Arial, sans-serif;\n"
                             "}\n"
                             "\n"
                             "/* Estilo de la ventana principal */\n"
                             "QDialog {\n"
                             "  background-color:#F4F2F2;\n"
                             "}\n"
                             "\n"
                             "/* Estilo del boton de entrada*/\n"
                             "QPushButton {\n"
                             "  background-color: #246EC7;\n"
                             "  color: #ffffff;\n"
                             "  border-radius: 5px;\n"
                             "}\n"
                             "\n"
                             "/*Estilo del boton de salida*/\n"
                             "#B_salida {\n"
                             "  background-color: #C73224;\n"
                             "  color: #ffffff;\n"
                             " /* padding: 10px 20px;*/\n"
                             "  border-radius: 5px;\n"
                             "}\n"
                             "\n"
                             "QPushButton:hover {\n"
                             "  background-color: #27ae60;\n"
                             "}\n"
                             "\n"
                             "/* Estilo de las etiquetas de texto titulo*/\n"
                             "QLabel {\n"
                             "  color: #000000;\n"
                             "  font-size: 20px;\n"
                             "  font-weight: bold;\n"
                             "}\n"
                             "/* Estilo de las etiquetas de texto titulo_dni*/\n"
                             "#SubTitulo {\n"
                             "  color: #547A78;\n"
                             "  font-size: 14px;\n"
                             "}\n"
                             "\n"
                             "#SubTitulo_2 {\n"
                             "  color: #547A78;\n"
                             "  font-size: 14px;\n"
                             "}\n"
                             "\n"
                             "#SubTitulo_3 {\n"
                             "  color: #547A78;\n"
                             "  font-size: 14px;\n"
                             "}\n"
                             "/* Estilo de los campos de entrada de texto */\n"
                             "QLineEdit {\n"
                             "  padding: 0px;\n"
                             "  border: 1px solid #cccccc;\n"
                             "  border-radius: 5px;\n"
                             "}\n"
                             "\n"
                             "/* Estilo de las áreas de texto */\n"
                             "QTextEdit {\n"
                             "  padding: 5px;\n"
                             "  border: 1px solid #cccccc;\n"
                             "  border-radius: 3px;\n"
                             "}\n"
                             "\n"
                             "/* Estilo de las barras de desplazamiento */\n"
                             "QScrollBar:vertical {\n"
                             "  width: 8px;\n"
                             "}\n"
                             "\n"
                             "QScrollBar:horizontal {\n"
                             "  height: 8px;\n"
                             "}\n"
                             "\n"
                             "QScrollBar::handle {\n"
                             "  background-color: #cccccc;\n"
                             "  border-radius: 4px;\n"
                             "}\n"
                             "\n"
                             "QScrollBar::handle:hover {\n"
                             "  background-color: #999999;\n"
                             "}\n"
                             "\n"
                             "QScrollBar::add-page, QScrollBar::sub-page {\n"
                             "  background: none;\n"
                             "}\n"
                             "\n"
                             "QScrollBar::add-line, QScrollBar::sub-line {\n"
                             "  background: none;\n"
                             "}\n"
                             "\n"
                             "QScrollBar::add-line:vertical {\n"
                             "  height: 0px;\n"
                             "}\n"
                             "\n"
                             "QScrollBar::sub-line:vertical {\n"
                             "  height: 0px;\n"
                             "}\n"
                             "\n"
                             "QScrollBar::add-line:horizontal {\n"
                             "  width: 0px;\n"
                             "}\n"
                             "\n"
                             "QScrollBar::sub-line:horizontal {\n"
                             "  width: 0px;\n"
                             "}\n"
                             "")

        self.pushButton = QtWidgets.QPushButton(Dialog)
        self.pushButton.setGeometry(QtCore.QRect(100, 470, 75, 23))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(Dialog)
        self.pushButton_2.setGeometry(QtCore.QRect(260, 470, 75, 23))
        self.pushButton_2.setObjectName("pushButton_2")
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(40, 20, 371, 31))
        self.label.setObjectName("label")
        self.SubTitulo_2 = QtWidgets.QLabel(Dialog)
        self.SubTitulo_2.setGeometry(QtCore.QRect(100, 70, 281, 31))
        self.SubTitulo_2.setObjectName("SubTitulo_2")
        self.SubTitulo = QtWidgets.QLabel(Dialog)
        self.SubTitulo.setGeometry(QtCore.QRect(100, 160, 281, 31))
        self.SubTitulo.setObjectName("SubTitulo")
        self.lineEdit = QtWidgets.QLineEdit(Dialog)
        self.lineEdit.setGeometry(QtCore.QRect(100, 100, 231, 21))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(Dialog)
        self.lineEdit_2.setGeometry(QtCore.QRect(100, 190, 231, 21))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.graphicsView = QtWidgets.QGraphicsView(Dialog)
        self.graphicsView.setGeometry(QtCore.QRect(130, 270, 181, 171))
        self.graphicsView.setObjectName("graphicsView")
        self.SubTitulo_3 = QtWidgets.QLabel(Dialog)
        self.SubTitulo_3.setGeometry(QtCore.QRect(100, 240, 281, 31))
        self.SubTitulo_3.setObjectName("SubTitulo_3")
        self.pushButton_3 = QtWidgets.QPushButton(Dialog)
        self.pushButton_3.setGeometry(QtCore.QRect(330, 270, 75, 23))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(Dialog)
        self.pushButton_4.setGeometry(QtCore.QRect(330, 310, 75, 23))
        self.pushButton_4.setObjectName("pushButton_4")

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

        self.pushButton_3.clicked.connect(self.take_photo)
        self.pushButton_4.clicked.connect(self.delete_photo)
        self.pushButton_2.clicked.connect(Dialog.reject)
        self.pushButton.clicked.connect(ingresar)

        self.face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.pushButton.setText(_translate("Dialog", "INGRESAR"))
        self.pushButton_2.setText(_translate("Dialog", "CANCELAR"))
        self.label.setText(_translate("Dialog", "Formulario de ingreso de nuevo fletero "))
        self.SubTitulo_2.setText(_translate("Dialog", "Nombre:"))
        self.SubTitulo.setText(_translate("Dialog", "Apellido:"))
        self.SubTitulo_3.setText(_translate("Dialog", "Foto:"))
        self.pushButton_3.setText(_translate("Dialog", "TOMAR"))
        self.pushButton_4.setText(_translate("Dialog", "ELIMINAR"))

    def take_photo(self,Dialog):
        abrir_dialogo1(Dialog)
        camera = cv2.VideoCapture(0)
        ret, frame = camera.read()
        if ret:
            # Convertir la imagen a escala de grises para la detección de rostros
            gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

            # Cargar el clasificador de cascada Haar para la detección de rostros
            face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

            # Detectar rostros en la imagen
            faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))

            if len(faces) > 0:
                # Dibujar un rectángulo alrededor de cada rostro detectado
                for (x, y, w, h) in faces:
                    cv2.rectangle(frame, (x, y), (x+w, y+h), (0, 255, 0), 2)
                
                # Cerrar la cámara
                camera.release()

                # Mostrar la imagen con los rostros detectados
                image = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
                plt.imshow(image)
                plt.axis('off')
                plt.show()

                # Almacenar la imagen con los rostros detectados en la base de datos
                image_data = cv2.imencode('.jpg', frame)[1].tobytes()
            else:
                 # Cerrar la cámara
                camera.release()
                # Mostrar la imagen con los rostros detectados
                image = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
                plt.imshow(image)
                plt.axis('off')
                plt.show()
                print("No se detectaron rostros en la imagen capturada, vuelve a registrar los datos")
        else:
                return "No se pudo capturar la foto del fletero"

    def display_photo(self, image,frame):
                # Mostrar la imagen con los rostros detectados
                image = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
                plt.imshow(image)
                plt.axis('off')
                plt.show()

    def delete_photo(self):
        self.graphicsView.setScene(None)


class Ui_Dialog1(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(381, 142)
        Dialog.setStyleSheet("/* Estilo de las etiquetas de texto titulo*/\n"
"#label {\n"
"  color: #000000;\n"
"  font-size: 20px;\n"
"  font-weight: bold;\n"
"}\n"
"QLabel{\n"
"  color: #547A78;\n"
"  font-size: 14px;\n"
"}")
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(20, 10, 371, 31))
        self.label.setObjectName("label")
        self.SubTitulo_2 = QtWidgets.QLabel(Dialog)
        self.SubTitulo_2.setGeometry(QtCore.QRect(20, 60, 281, 31))
        self.SubTitulo_2.setObjectName("SubTitulo_2")
        self.SubTitulo_3 = QtWidgets.QLabel(Dialog)
        self.SubTitulo_3.setGeometry(QtCore.QRect(20, 80, 331, 31))
        self.SubTitulo_3.setObjectName("SubTitulo_3")
        self.SubTitulo_4 = QtWidgets.QLabel(Dialog)
        self.SubTitulo_4.setGeometry(QtCore.QRect(20, 100, 381, 31))
        self.SubTitulo_4.setObjectName("SubTitulo_4")

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.label.setText(_translate("Dialog", "ANTES DE TOMAR LA FOTO"))
        self.SubTitulo_2.setText(_translate("Dialog", "Porfavor preparece para sacar la foto, "))
        self.SubTitulo_3.setText(_translate("Dialog", "posicione al individuo enfrente de la camara y"))
        self.SubTitulo_4.setText(_translate("Dialog", "cierre esta pestaña."))


def abrir_dialogo1 (Dialog):
    '''En este código, se crea una nueva instancia de la clase QDialog llamada dialog. Luego, se instancia la clase Ui_Dialog y se llama al método setupUi() pasando dialog como argumento para configurar la interfaz gráfica del diálogo. Finalmente, se llama al método exec_() en dialog para mostrar el diálogo y esperar hasta que el usuario lo cierre.'''
    dialog = QtWidgets.QDialog()
    ui =Ui_Dialog1()
    ui.setupUi(dialog)
    dialog.exec_()
def abrir_dialogo_Anterior (Dialog):
    Dialog.close()
    import Ingreso_Dni_Pantalla
    '''En este código, se crea una nueva instancia de la clase QDialog llamada dialog. Luego, se instancia la clase Ui_Dialog y se llama al método setupUi() pasando dialog como argumento para configurar la interfaz gráfica del diálogo. Finalmente, se llama al método exec_() en dialog para mostrar el diálogo y esperar hasta que el usuario lo cierre.'''
    dialog = QtWidgets.QDialog()
    ui = Ingreso_Dni_Pantalla.Ui_Dialog()
    ui.setupUi(dialog)
    dialog.exec_()

def dni_carga(dni, nombre, apellido, imagen):
    try:
         # Establecer la conexión a la base de datos
        connection = pyodbc.connect('Driver={SQL Server};Server=DESKTOP-8AO7HCU;Database=CONTROL_VEIHCULAR;uid=sa;pwd=kncb0405')

        cursor = connection.cursor()
        #--print("Procederemos a dar de alta este nuevo fletero, por favor cargue la información: ")
        #--nombre = input("Ingrese el nombre del fletero: ")
        #---apellido = input("Ingrese el apellido del fletero: ")
        '''
        camera = cv2.VideoCapture(0)
        ret, frame = camera.read()
        if ret:
            # Convertir la imagen a escala de grises para la detección de rostros
            gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

            # Cargar el clasificador de cascada Haar para la detección de rostros
            face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

            # Detectar rostros en la imagen
            faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))

            if len(faces) > 0:
                # Dibujar un rectángulo alrededor de cada rostro detectado
                for (x, y, w, h) in faces:
                    cv2.rectangle(frame, (x, y), (x+w, y+h), (0, 255, 0), 2)
                
                # Cerrar la cámara
                camera.release()

                # Mostrar la imagen con los rostros detectados
                image = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
                plt.imshow(image)
                plt.axis('off')
                plt.show()

                # Almacenar la imagen con los rostros detectados en la base de datos
                image_data = cv2.imencode('.jpg', frame)[1].tobytes()

            else:
                 # Cerrar la cámara
                camera.release()
                # Mostrar la imagen con los rostros detectados
                image = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
                plt.imshow(image)
                plt.axis('off')
                plt.show()
                print("No se detectaron rostros en la imagen capturada, vuelve a registrar los datos")
                return dni_carga(dni)
        else:
            return "No se pudo capturar la foto del fletero"'''
        
        cursor.execute("INSERT INTO fletero VALUES (?, ?, ?, ?)", dni, nombre, apellido, imagen)
        connection.commit()
        cursor.close()
        print("El fletero " + nombre + " de DNI: " + dni + " y Apellido: " + apellido + ", fue dado de alta correctamente!")
        return f'patente_control(patente=input("Ingrese patente de vehículo: "))'
    except Exception as e:
        print("Error en el alta del fletero:", e)    




'''
if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())
'''
